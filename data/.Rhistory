image(tab3@bestTab[[m]], axes=FALSE, zlim=c(-4,4), col=rainbow(21))}
plot.matrix.fn
lapply(list(a,b,c), plot.matrix.fn)
install.packages("gridplot")
colnames(muTab)
muTab
ls()
aa <- rnorm(100)
plot(density(aa))
aap <- aa>=0
dim(aa)
length(aa)
aap <- aa[aa>=0]
aap
length(aap)
aan <- aa[aa<=0]
length(aan)
plot(density(aa),xlim = c(0,10))
plot(density(aa),xlim = c(-10,0))
plot(-density(aa),xlim = c(0,10))
plot(abs(density(aa)))
density(aa)
d <- density(aa)
d
d$x
dd <- d[d$x>0]
dim(d)
length(dd$x)
length(d$x)
length(d)
ddx <- d$x[d$x>0]
ddx
ddxp <- d$x[d$x>0]
ddyp <- d$y[d$x<0]
length(ddxp)
d$x>0
d$y
ddxn <- d$x[d$x<=0]
ddxp <- d$x[d$x>=0]
length(ddxn)
ddyn <- d$y[1:247]
a <- 247
length(d$y)
ddyn <- d$y[1:a]
length(ddyn)
ddyp <- d$y[-a]
512-247
ddyp <- d$y[-seq_len(a)]
length(ddyp)
plot(ddxp,ddyp)
plot(ddxp,ddyp, type="l")
lines(-ddxn,ddyn, type="l")
dim(plot.matrix.fn)
WDI = read.csv(file = "http://dl.dropbox.com/u/18161931/WorldBankIndicators.csv",
stringsAsFactors = FALSE, nrows = 100)
WDI = WDI[-c(1:10), ]
WDI
WDI.df = WDI(indicator = WDI$WDI_NAME[1], start = 2010, end = 2010)
for(i in 2:NROW(WDI)){
tmp = WDI(indicator = WDI$WDI_NAME[i], start = 2010, end = 2010)
if(!inherits(tmp, "try-error") &
(sum(is.na(tmp[, WDI$WDI_NAME[i]])) != NROW(tmp)))
WDI.df = merge(WDI.df, tmp, by = c("iso2c", "country", "year"))
}
install.packages("Hmisc")
library(Hmisc)
R
test.df <- data.frame(x = ts(1:12, start = c(2000, 1), frequency = 12),
y = ts(1:12, start = c(2001, 1), frequency = 12))
units(test.df$x) = "cm"
units(test.df$y) = "m"
comment(test.df) <- "this is a test data set"
test.df
describe(test.df)
contents(test.df)
str(subset(test.df, select = a, drop = FALSE))
install.packages("RColorBrewer")
library("RColorBrewer")
dat <- data.frame(AgeGroup=factor(
1:9,
labels= c("Younger than 16", "16-24",
"25-34", "35-44", "45-54",
"55-64", "65-74",
"Older than 74", "(blank)"),
ordered=TRUE),
No=c(34, 2079, 2585, 1593,
1274, 802, 291, 78, 13),
Yes=c(18, 1970, 4035, 2328,
1707, 924, 386, 68, 4))
library(latticeExtra)
asTheEconomist(
barchart(Yes + No ~ AgeGroup, dat,
auto.key=list(columns=2, space="top"),
main="Did you have sex in the last 4 weeks?\n"),
xlab="Age group",
ylab="Number of responses from Guardian data blog readers"
)
dat
with(dat, {
with(subset(dat, AgeGroup %in% c("25-34", "35-44")),
# X-squared = 2.5007, df = 1, p-value = 0.1138
#   -0.00376278  0.03534383
# prop 1    prop 2
# 0.6095166 0.5937261
with(subset(dat, AgeGroup %in% c("25-34", "35-44", "45-54")),
#
# 3-sample test for equality of proportions without continuity correction
# X-squared = 11.84, df = 2, p-value = 0.002682
# prop 1 prop 2 prop 3
# 0.6095 0.5937 0.5726
with(subset(dat, AgeGroup %in% c("35-44", "45-54")),
{
prop.test(Yes, Yes + No)
})
#
# 2-sample test for equality of proportions with continuity correction
#
# data:  Yes out of Yes + No
# X-squared = 3.018, df = 1, p-value = 0.08233
# alternative hypothesis: two.sided
# 95 percent confidence interval:
#   -0.002684  0.044883
# sample estimates:
# prop 1 prop 2
# 0.5937 0.5726
probs = matrix(c(11, 99, 3, 887), 2, 2, byrow = TRUE, dimnames = list(c("M-True",
"M-False"), c("C-True", "C-False")))
probs = cbind(probs, rowSums(probs))
probs = rbind(probs, colSums(probs))
colnames(probs)[3] = "M"
rownames(probs)[3] = "C"
probs
falsePositive = round(probs[1, 1]/0.8)
probs2 = probs
probs2[1, 2] = falsePositive
probs2[2, 2] = probs2[3, 2] - falsePositive
probs2[1, 3] = sum(probs2[1, 1:2])
probs2[2, 3] = sum(probs2[2, 1:2])
probs2
library(ggplot2)
library(reshape2)
mdf = melt(probs[1:2, 1:2], varnames = c("Mammogram", "Cancer"))
mdf$Cancer = ifelse(mdf$Cancer == "C-True", "Yes", "zNo")
p = ggplot(mdf, aes(x = Cancer, y = Mammogram)) + geom_tile(aes(fill = value)) +
scale_fill_gradient(low = "blue", high = "yellow")
p
PPV = probs[1, 1]/probs[1, 3]
probs3 = probs
probs3[2, 1] = 250 - probs3[1, 1]
probs3[2, 2] = probs3[2, 3] - probs3[2, 1]
probs3[3, 1] = 250
probs3[3, 2] = 750
probs3
session()
sessionInfo()
install.packages("Desktop/conSTable_0.2.tar.gz",type="source")#
install.packages("Desktop/conSTable_0.2.tar.gz",type="source",repos=NULL)#
#
library(conSTable)#
conSTable::conSTable#
demo(conSTable)#
demo(package="conSTable)#
""#
"#
demo(package="conSTable")#
conSTableDemo#
source('~/Desktop/conSTable/demo/conSTableDemo.R', chdir = TRUE)#
rm(list=ls())#
gc()#
#
library("conSTable")#
dim(muTab)#
rownames(muTab)#
colnames(muTab)#
system.time(tab <- conSTable(muTab, n0, prop=0.5,verbose=FALSE))#
tab#
conSTable(muTab, n0, prop=0.5,verbose=FALSE)#
setwd("Downloads/")#
rm(list=ls())#
gc()#
getwd()#
Cereals<-c(496,34,0,1,37,0)#
Roots_Tubers<-c(1867,0,0,0,210,0)#
Vegetables<-c(46,0,0,0,10,0)#
Fruit_Nuts<-c(158,0,0,0,27,0)#
Pulses<-c(29,0,0,1,1,0)#
Stim_Spices<-c(0,0,0,0,0,0)#
Sugar<-c(61,0,0,0,2,0)#
Meat_Fish<-c(116,0,0,0,18,0)#
Dairy_Eggs<-c(33,0,0,0,1,0)#
VegOils_AnimalFats<-c(615,0,0,0,41,0)#
Alcoholic_bev<-c(8,0,0,0,0,0)#
colnames(mu_Tab) <-c ("Food","Feed","OtherUse","Seed","Losses","StVar")#
rm(list=ls())#
gc()#
library("conSTable")#
row_A <- c(5,30,10,0,1)#
row_B <- c(0,0,5,20,5)#
row_C <- c(10,2,40,6,0)#
scenario <- rbind(row_A,row_B,row_C)#
scenario#
scenario#
colnames(scenario) <-c ("col_A","col_B","col_C","col_D","col_E")#
scenario <- addmargins(scenario, FUN = list(Total = sum), quiet = TRUE)#
scenario#
n0 <- c(46,30,58)#
mu_row_A <- c(7,15,5,0,0)#
mu_row_B <- c(0,0,6,18,8)#
mu_row_C <- c(8,1,30,5,0)#
mu_Tab <- rbind(mu_row_A,mu_row_B,mu_row_C)#
mu_Tab#
toll = 15#
round(n0+n0*toll/100,0)#
round(n0-n0*toll/100,0)#
dim(mu_Tab)#
bounds <- array(0, c(3,5,2)) #
bounds#
bounds[,,1] = round(mu_Tab + mu_Tab * 130/100,0)#
bounds[,,2] = round(mu_Tab - mu_Tab * 60/100,0)#
bounds[,,1]#
scenario#
bounds[,,2]#
data("Italy2006FBsheet")#
rm(list=ls())#
gc()#
#
library("conSTable")#
#
data("Italy2006FBsheet")#
muTab#
ls()#
lowCol#
uppCol#
n0#
Scenario#
rm(list=ls())#
gc()#
#
library("conSTable")#
#
data("Italy2006FBsheet")#
ls()#
dim(muTab)#
#
rownames(muTab)#
#
colnames(muTab)#
traceback()#
options(error=recover)#
#
system.time(tab <- conSTable(muTab, n0, prop=0.5,verbose=FALSE))#
nc#
0#
quit()#
exit#
99#
rm(list=ls())#
gc()#
getwd()#
setwd("C:/Users/utente/Desktop")#
library("conSTable")#
Cereals<-c(496,34,0,1,37,0)#
Roots_Tubers<-c(1867,0,0,0,210,0)#
Vegetables<-c(46,0,0,0,10,0)#
Fruit_Nuts<-c(158,0,0,0,27,0)#
Pulses<-c(29,0,0,1,1,0)#
Stim_Spices<-c(0,0,0,0,0,0)#
Sugar<-c(61,0,0,0,2,0)#
Meat_Fish<-c(116,0,0,0,18,0)#
Dairy_Eggs<-c(33,0,0,0,1,0)#
VegOils_AnimalFats<-c(615,0,0,0,41,0)#
Alcoholic_bev<-c(8,0,0,0,0,0)#
mu_Tab <- rbind(Cereals,Roots_Tubers,Vegetables,Fruit_Nuts,Pulses,Stim_Spices,Sugar,#
                Meat_Fish,Dairy_Eggs,VegOils_AnimalFats,Alcoholic_bev)#
colnames(mu_Tab) <-c("Food","Feed","OtherUse","Seed","Losses","StVar")#
mu_Tab#
row_Tot<-c(567.2,2077.5,55.1,184.8,31.8,0.3,63.2,134.1,33.8,656.5,7.6) #
row_Tot - mu_Tab[-12,7]#
dim(mu_Tab)#
bounds <- array(0, c(11,6,2)) #
colnames(bounds)<-c("Food","Feed","OtherUse","Seed","Losses","StVar")#
row.names(bounds)<-c("Cereals","Roots_Tubers","Vegetables","Fruit_Nuts","Pulses",#
					  "Stim_Spices","Sugar","Meat_Fish","Dairy_Eggs","VegOils_AnimalFats",#
                    "Alcoholic_bev")#
bounds[,-6,1] = round(mu_Tab[,-6] + mu_Tab[,-6] * 10/100,0)#
bounds[,-6,2] = round(mu_Tab[,-6] - mu_Tab[,-6] * 10/100,0)#
rm(list=ls())#
gc()#
getwd()#
library("conSTable")#
Cereals<-c(496,34,0,1,37,0)#
Roots_Tubers<-c(1867,0,0,0,210,0)#
Vegetables<-c(46,0,0,0,10,0)#
Fruit_Nuts<-c(158,0,0,0,27,0)#
Pulses<-c(29,0,0,1,1,0)#
Stim_Spices<-c(0,0,0,0,0,0)#
Sugar<-c(61,0,0,0,2,0)#
Meat_Fish<-c(116,0,0,0,18,0)#
Dairy_Eggs<-c(33,0,0,0,1,0)#
VegOils_AnimalFats<-c(615,0,0,0,41,0)#
Alcoholic_bev<-c(8,0,0,0,0,0)#
mu_Tab <- rbind(Cereals,Roots_Tubers,Vegetables,Fruit_Nuts,Pulses,Stim_Spices,Sugar,#
                Meat_Fish,Dairy_Eggs,VegOils_AnimalFats,Alcoholic_bev)#
colnames(mu_Tab) <-c("Food","Feed","OtherUse","Seed","Losses","StVar")#
mu_Tab#
row_Tot - mu_Tab[-12,7]#
row_Tot<-c(567.2,2077.5,55.1,184.8,31.8,0.3,63.2,134.1,33.8,656.5,7.6) #
dim(mu_Tab)#
bounds[,-6,1] = round(mu_Tab[,-6] + mu_Tab[,-6] * 10/100,0)#
bounds[,-6,2] = round(mu_Tab[,-6] - mu_Tab[,-6] * 10/100,0)#
row_Tot#
length(row_Tot)#
#
rm(list=ls())#
Cereals<-c(496,34,0,1,37,0)#
Roots_Tubers<-c(1867,0,0,0,210,0)#
Vegetables<-c(46,0,0,0,10,0)#
Fruit_Nuts<-c(158,0,0,0,27,0)#
Pulses<-c(29,0,0,1,1,0)#
Stim_Spices<-c(0,0,0,0,0,0)#
Sugar<-c(61,0,0,0,2,0)#
Meat_Fish<-c(116,0,0,0,18,0)#
Dairy_Eggs<-c(33,0,0,0,1,0)#
VegOils_AnimalFats<-c(615,0,0,0,41,0)#
Alcoholic_bev<-c(8,0,0,0,0,0)#
mu_Tab <- rbind(Cereals,Roots_Tubers,Vegetables,Fruit_Nuts,Pulses,Stim_Spices,Sugar,#
                Meat_Fish,Dairy_Eggs,VegOils_AnimalFats,Alcoholic_bev)#
colnames(mu_Tab) <-c("Food","Feed","OtherUse","Seed","Losses","StVar")#
mu_Tab#
dim(mu_Tab)#
row_Tot<-c(567.2,2077.5,55.1,184.8,31.8,0.3,63.2,134.1,33.8,656.5,7.6) #
row_Tot - mu_Tab[,7]#
mu_Tab[,7]#
dim(mu_Tav)#
dim(mu_Tab)#
mu_Tab <- addmargins(mu_Tab, FUN = list(Total = sum), quiet = TRUE)#
row_Tot - mu_Tab[-12,7]#
mu_Tab <- mu_Tab[-12,-7]#
mu_Tab#
bounds <- array(0, c(11,6,2)) #
colnames(bounds)<-c("Food","Feed","OtherUse","Seed","Losses","StVar")#
row.names(bounds)<-c("Cereals","Roots_Tubers","Vegetables","Fruit_Nuts","Pulses",#
					  "Stim_Spices","Sugar","Meat_Fish","Dairy_Eggs","VegOils_AnimalFats",#
                    "Alcoholic_bev")#
bounds[,-6,1] = round(mu_Tab[,-6] + mu_Tab[,-6] * 10/100,0)#
bounds[,-6,2] = round(mu_Tab[,-6] - mu_Tab[,-6] * 10/100,0)#
bounds#
for (i in 1:4){#
bounds[c(1,5,7,10),6,1][i]<-abs(round(rnorm(1,mu_Tab[c(1,5,7,10),6],100*runif(1)),0))#
}#
for (i in 1:4){#
bounds[c(1,5,7,10),6,2][i]<--abs(round(rnorm(1,mu_Tab[c(1,5,7,10),6],100*runif(1)),0))#
}#
bounds[,,1]#
mu_Tab#
bounds[,,2]#
uppCol<-matrix(apply(bounds[,,1],2,sum),1,6)#
uppCol<-as.data.frame(uppCol)#
colnames(uppCol)<-c("Food","Feed","OtherUse","Seed","Losses","StVar")#
row.names(uppCol)<-c("uppCol")#
lowCol<-matrix(apply(bounds[,,2],2,sum),1,6)#
lowCol<-as.data.frame(lowCol)#
colnames(lowCol)<-c("Food","Feed","OtherUse","Seed","Losses","StVar")#
row.names(lowCol)<-c("lowCol")#
lowCol#
lowCol#
apply(mu_Tab,2,sum)#
uppCol#
controlCol1 <- rbind(lowCol,uppCol)#
dim(controlCol1)#
controlCol1#
args(conSTable)#
tab <- conSTable(muTab=mu_Tab, rowTot=row_Tot,controlCol=controlCol1,nIter=1,objFun=function(tab){-colSums(tab)[1]})#
makeActiveBinding("refresh",function(){shell("R");q("no")}, .GlobalEnv)#
refresh()#
10#

rm(list=ls())#
gc()#
remove.packages("conSTable") #
detach("package:conSTable")#

library(devtools)#

install_github("conSTable",username="mrpozzi",ref="master")#

library(conSTable)#

setwd("~/Documents/conSTable/data/")#

dir()#

file_g <- "groupContTab.csv"#
file <- "commodityContTab.csv"#
file0 <- "Comm.SZ.csv"#
filef <- "FeedConstraint.csv"#
FBS_g <- readFBS_group(file_g,file0,filef) #
#
FBS <- readFBS(file,file0,filef)#

#
balanceOne <- balanceFBS(FBS_g)#

balanceOne("9",2012,oset=c(0,0,0,0,0,100000),prop=NULL, nIter = 10,verbose=TRUE,checks="none")#

FBS[["Argentina"]][["2012"]]#

FBS[["9"]][["2012"]]#

FBS[["10"]][["2012"]]#

FBS_g[["10"]][["2012"]]#

FBS_g[["59"]][["2012"]]#

FBS_g[["128"]][["2012"]]#

FBS_g[["9"]][["2012"]]#

FBS_g[["128"]][["2012"]]#
#

FBS[["128"]][["2012"]]#

attr(FBS_g,"countryMap")[]#

balanceOne <- balanceFBS(FBS)#

debug(balanceOne("9",2012,oset=c(0,0,0,0,0,10000),prop=NULL, nIter = 100,verbose=TRUE,checks="none",feedShift=30))#

debug()#

debug#

